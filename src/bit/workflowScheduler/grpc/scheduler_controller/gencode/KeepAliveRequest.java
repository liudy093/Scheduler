// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheduler_controller.proto

package bit.workflowScheduler.grpc.scheduler_controller.gencode;

/**
 * Protobuf type {@code bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest}
 */
public  final class KeepAliveRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest)
    KeepAliveRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use KeepAliveRequest.newBuilder() to construct.
  private KeepAliveRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private KeepAliveRequest() {
    sid_ = "";
    pressure_ = 0;
    capacity_ = 0;
    serialNumber_ = 0L;
    ipv4_ = "";
    clusterId_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private KeepAliveRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            sid_ = s;
            break;
          }
          case 21: {

            pressure_ = input.readFixed32();
            break;
          }
          case 29: {

            capacity_ = input.readFixed32();
            break;
          }
          case 32: {

            serialNumber_ = input.readUInt64();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            ipv4_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            clusterId_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return bit.workflowScheduler.grpc.scheduler_controller.gencode.SchedulerControllerOuterClass.internal_static_bit_workflowScheduler_grpc_scheduler_controller_gencode_KeepAliveRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return bit.workflowScheduler.grpc.scheduler_controller.gencode.SchedulerControllerOuterClass.internal_static_bit_workflowScheduler_grpc_scheduler_controller_gencode_KeepAliveRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest.class, bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest.Builder.class);
  }

  public static final int SID_FIELD_NUMBER = 1;
  private volatile java.lang.Object sid_;
  /**
   * <pre>
   * 调度器id
   * </pre>
   *
   * <code>string sid = 1;</code>
   */
  public java.lang.String getSid() {
    java.lang.Object ref = sid_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sid_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 调度器id
   * </pre>
   *
   * <code>string sid = 1;</code>
   */
  public com.google.protobuf.ByteString
      getSidBytes() {
    java.lang.Object ref = sid_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sid_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRESSURE_FIELD_NUMBER = 2;
  private int pressure_;
  /**
   * <pre>
   * 调度器自测压力值（0~100，整数）
   * </pre>
   *
   * <code>fixed32 pressure = 2;</code>
   */
  public int getPressure() {
    return pressure_;
  }

  public static final int CAPACITY_FIELD_NUMBER = 3;
  private int capacity_;
  /**
   * <pre>
   * 调度器承载力（还可以承载/接收多少工作流，单位：个，整数）
   * </pre>
   *
   * <code>fixed32 capacity = 3;</code>
   */
  public int getCapacity() {
    return capacity_;
  }

  public static final int SERIAL_NUMBER_FIELD_NUMBER = 4;
  private long serialNumber_;
  /**
   * <pre>
   * 保活序号（单调增，整数，从1开始）
   * </pre>
   *
   * <code>uint64 serial_number = 4;</code>
   */
  public long getSerialNumber() {
    return serialNumber_;
  }

  public static final int IPV4_FIELD_NUMBER = 5;
  private volatile java.lang.Object ipv4_;
  /**
   * <pre>
   * ipv4地址(ip:port)
   * </pre>
   *
   * <code>string ipv4 = 5;</code>
   */
  public java.lang.String getIpv4() {
    java.lang.Object ref = ipv4_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ipv4_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * ipv4地址(ip:port)
   * </pre>
   *
   * <code>string ipv4 = 5;</code>
   */
  public com.google.protobuf.ByteString
      getIpv4Bytes() {
    java.lang.Object ref = ipv4_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ipv4_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLUSTER_ID_FIELD_NUMBER = 6;
  private volatile java.lang.Object clusterId_;
  /**
   * <pre>
   * 集群id（必须保证与集群内资源分配器使用相同的集群id）
   * </pre>
   *
   * <code>string cluster_id = 6;</code>
   */
  public java.lang.String getClusterId() {
    java.lang.Object ref = clusterId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 集群id（必须保证与集群内资源分配器使用相同的集群id）
   * </pre>
   *
   * <code>string cluster_id = 6;</code>
   */
  public com.google.protobuf.ByteString
      getClusterIdBytes() {
    java.lang.Object ref = clusterId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clusterId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getSidBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sid_);
    }
    if (pressure_ != 0) {
      output.writeFixed32(2, pressure_);
    }
    if (capacity_ != 0) {
      output.writeFixed32(3, capacity_);
    }
    if (serialNumber_ != 0L) {
      output.writeUInt64(4, serialNumber_);
    }
    if (!getIpv4Bytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, ipv4_);
    }
    if (!getClusterIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, clusterId_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getSidBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sid_);
    }
    if (pressure_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed32Size(2, pressure_);
    }
    if (capacity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed32Size(3, capacity_);
    }
    if (serialNumber_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, serialNumber_);
    }
    if (!getIpv4Bytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, ipv4_);
    }
    if (!getClusterIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, clusterId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest)) {
      return super.equals(obj);
    }
    bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest other = (bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest) obj;

    boolean result = true;
    result = result && getSid()
        .equals(other.getSid());
    result = result && (getPressure()
        == other.getPressure());
    result = result && (getCapacity()
        == other.getCapacity());
    result = result && (getSerialNumber()
        == other.getSerialNumber());
    result = result && getIpv4()
        .equals(other.getIpv4());
    result = result && getClusterId()
        .equals(other.getClusterId());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SID_FIELD_NUMBER;
    hash = (53 * hash) + getSid().hashCode();
    hash = (37 * hash) + PRESSURE_FIELD_NUMBER;
    hash = (53 * hash) + getPressure();
    hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
    hash = (53 * hash) + getCapacity();
    hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSerialNumber());
    hash = (37 * hash) + IPV4_FIELD_NUMBER;
    hash = (53 * hash) + getIpv4().hashCode();
    hash = (37 * hash) + CLUSTER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getClusterId().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest)
      bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bit.workflowScheduler.grpc.scheduler_controller.gencode.SchedulerControllerOuterClass.internal_static_bit_workflowScheduler_grpc_scheduler_controller_gencode_KeepAliveRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bit.workflowScheduler.grpc.scheduler_controller.gencode.SchedulerControllerOuterClass.internal_static_bit_workflowScheduler_grpc_scheduler_controller_gencode_KeepAliveRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest.class, bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest.Builder.class);
    }

    // Construct using bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      sid_ = "";

      pressure_ = 0;

      capacity_ = 0;

      serialNumber_ = 0L;

      ipv4_ = "";

      clusterId_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return bit.workflowScheduler.grpc.scheduler_controller.gencode.SchedulerControllerOuterClass.internal_static_bit_workflowScheduler_grpc_scheduler_controller_gencode_KeepAliveRequest_descriptor;
    }

    public bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest getDefaultInstanceForType() {
      return bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest.getDefaultInstance();
    }

    public bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest build() {
      bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest buildPartial() {
      bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest result = new bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest(this);
      result.sid_ = sid_;
      result.pressure_ = pressure_;
      result.capacity_ = capacity_;
      result.serialNumber_ = serialNumber_;
      result.ipv4_ = ipv4_;
      result.clusterId_ = clusterId_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest) {
        return mergeFrom((bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest other) {
      if (other == bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest.getDefaultInstance()) return this;
      if (!other.getSid().isEmpty()) {
        sid_ = other.sid_;
        onChanged();
      }
      if (other.getPressure() != 0) {
        setPressure(other.getPressure());
      }
      if (other.getCapacity() != 0) {
        setCapacity(other.getCapacity());
      }
      if (other.getSerialNumber() != 0L) {
        setSerialNumber(other.getSerialNumber());
      }
      if (!other.getIpv4().isEmpty()) {
        ipv4_ = other.ipv4_;
        onChanged();
      }
      if (!other.getClusterId().isEmpty()) {
        clusterId_ = other.clusterId_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object sid_ = "";
    /**
     * <pre>
     * 调度器id
     * </pre>
     *
     * <code>string sid = 1;</code>
     */
    public java.lang.String getSid() {
      java.lang.Object ref = sid_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sid_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 调度器id
     * </pre>
     *
     * <code>string sid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSidBytes() {
      java.lang.Object ref = sid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 调度器id
     * </pre>
     *
     * <code>string sid = 1;</code>
     */
    public Builder setSid(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 调度器id
     * </pre>
     *
     * <code>string sid = 1;</code>
     */
    public Builder clearSid() {
      
      sid_ = getDefaultInstance().getSid();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 调度器id
     * </pre>
     *
     * <code>string sid = 1;</code>
     */
    public Builder setSidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sid_ = value;
      onChanged();
      return this;
    }

    private int pressure_ ;
    /**
     * <pre>
     * 调度器自测压力值（0~100，整数）
     * </pre>
     *
     * <code>fixed32 pressure = 2;</code>
     */
    public int getPressure() {
      return pressure_;
    }
    /**
     * <pre>
     * 调度器自测压力值（0~100，整数）
     * </pre>
     *
     * <code>fixed32 pressure = 2;</code>
     */
    public Builder setPressure(int value) {
      
      pressure_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 调度器自测压力值（0~100，整数）
     * </pre>
     *
     * <code>fixed32 pressure = 2;</code>
     */
    public Builder clearPressure() {
      
      pressure_ = 0;
      onChanged();
      return this;
    }

    private int capacity_ ;
    /**
     * <pre>
     * 调度器承载力（还可以承载/接收多少工作流，单位：个，整数）
     * </pre>
     *
     * <code>fixed32 capacity = 3;</code>
     */
    public int getCapacity() {
      return capacity_;
    }
    /**
     * <pre>
     * 调度器承载力（还可以承载/接收多少工作流，单位：个，整数）
     * </pre>
     *
     * <code>fixed32 capacity = 3;</code>
     */
    public Builder setCapacity(int value) {
      
      capacity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 调度器承载力（还可以承载/接收多少工作流，单位：个，整数）
     * </pre>
     *
     * <code>fixed32 capacity = 3;</code>
     */
    public Builder clearCapacity() {
      
      capacity_ = 0;
      onChanged();
      return this;
    }

    private long serialNumber_ ;
    /**
     * <pre>
     * 保活序号（单调增，整数，从1开始）
     * </pre>
     *
     * <code>uint64 serial_number = 4;</code>
     */
    public long getSerialNumber() {
      return serialNumber_;
    }
    /**
     * <pre>
     * 保活序号（单调增，整数，从1开始）
     * </pre>
     *
     * <code>uint64 serial_number = 4;</code>
     */
    public Builder setSerialNumber(long value) {
      
      serialNumber_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 保活序号（单调增，整数，从1开始）
     * </pre>
     *
     * <code>uint64 serial_number = 4;</code>
     */
    public Builder clearSerialNumber() {
      
      serialNumber_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object ipv4_ = "";
    /**
     * <pre>
     * ipv4地址(ip:port)
     * </pre>
     *
     * <code>string ipv4 = 5;</code>
     */
    public java.lang.String getIpv4() {
      java.lang.Object ref = ipv4_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ipv4_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * ipv4地址(ip:port)
     * </pre>
     *
     * <code>string ipv4 = 5;</code>
     */
    public com.google.protobuf.ByteString
        getIpv4Bytes() {
      java.lang.Object ref = ipv4_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipv4_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * ipv4地址(ip:port)
     * </pre>
     *
     * <code>string ipv4 = 5;</code>
     */
    public Builder setIpv4(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ipv4_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ipv4地址(ip:port)
     * </pre>
     *
     * <code>string ipv4 = 5;</code>
     */
    public Builder clearIpv4() {
      
      ipv4_ = getDefaultInstance().getIpv4();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ipv4地址(ip:port)
     * </pre>
     *
     * <code>string ipv4 = 5;</code>
     */
    public Builder setIpv4Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ipv4_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clusterId_ = "";
    /**
     * <pre>
     * 集群id（必须保证与集群内资源分配器使用相同的集群id）
     * </pre>
     *
     * <code>string cluster_id = 6;</code>
     */
    public java.lang.String getClusterId() {
      java.lang.Object ref = clusterId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 集群id（必须保证与集群内资源分配器使用相同的集群id）
     * </pre>
     *
     * <code>string cluster_id = 6;</code>
     */
    public com.google.protobuf.ByteString
        getClusterIdBytes() {
      java.lang.Object ref = clusterId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 集群id（必须保证与集群内资源分配器使用相同的集群id）
     * </pre>
     *
     * <code>string cluster_id = 6;</code>
     */
    public Builder setClusterId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clusterId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 集群id（必须保证与集群内资源分配器使用相同的集群id）
     * </pre>
     *
     * <code>string cluster_id = 6;</code>
     */
    public Builder clearClusterId() {
      
      clusterId_ = getDefaultInstance().getClusterId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 集群id（必须保证与集群内资源分配器使用相同的集群id）
     * </pre>
     *
     * <code>string cluster_id = 6;</code>
     */
    public Builder setClusterIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clusterId_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest)
  }

  // @@protoc_insertion_point(class_scope:bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest)
  private static final bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest();
  }

  public static bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KeepAliveRequest>
      PARSER = new com.google.protobuf.AbstractParser<KeepAliveRequest>() {
    public KeepAliveRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new KeepAliveRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<KeepAliveRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<KeepAliveRequest> getParserForType() {
    return PARSER;
  }

  public bit.workflowScheduler.grpc.scheduler_controller.gencode.KeepAliveRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

